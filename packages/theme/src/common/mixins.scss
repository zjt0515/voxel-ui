@use 'sass:map';
@forward 'function';
@use 'function' as *;
@use 'var.scss' as *;
@use 'config' as *;
// 生成层次色变量
@mixin set-color() {
  @each $type in $types {
    $color: map.get($colors, $type, 'base');
    #{createVarName(('color', $type))}: #{$color};
  }
}

@mixin set-color-light() {
  @each $type in $types {
    @for $i from 1 through 9 {
      $color: map.get($colors, $type, 'light-' + $i);
      #{createVarName(('color', $type, 'light', $i))}: #{$color};
    }
  }
}

/**
 * name: 组件名
 * var: 组件配置
 */
@mixin set-component-var($name, $var, $varKey: 'default') {
  @each $key, $value in $var {
    $varName: getVarName($name, $key);
    $val: map.get($var, $key, $varKey);
    @if ($val) {
      #{$varName}: var(#{$val});
    }
  }
}

/**
 * 生成block类名
 */
@mixin b($block) {
  $b: '.' + $namespace + $connect + $block !global;
  #{$b} {
    @content;
  }
}

/**
 * 使用b mixin后
 * 生成 b-elem 类名mixin
 */
@mixin e($element) {
  $name: $b + $element-connect + $element;
  @at-root {
    #{$name} {
      @content;
    }
  }
}

/**
 * 生成b-e-m类名
 */
@mixin m($attr, $val: '') {
  $modifier: $b + $modifier-connect + $attr + $modifier-value-connect + $var;
  @at-root {
    #{$modifier} {
      @content;
    }
  }
}

@mixin s($attrs, $and: true) {
  $state: '';
  @each $attr in $attrs {
    $state: if($and, '&', '') + '.' + $state-prefix + $attr + ',' + $state;
  }
  #{$state} {
    @content;
  }
}
